{"ast":null,"code":"import _slicedToArray from \"/Users/christopherbrown/Desktop/Workspace/aetc-form-341/node_modules/.registry.npmjs.org/@babel/runtime/7.6.0/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { useState, useEffect } from 'react';\nvar initialValue = {\n  innerWidth: null,\n  innerHeight: null,\n  outerWidth: null,\n  outerHeight: null\n};\n/**\r\n * useWindowSize\r\n *\r\n * A hook that provides information of the dimensions of the window\r\n *\r\n * @return {WindowDimensions}  Dimensions of the window\r\n */\n\nfunction useWindowSize() {\n  var _useState = useState(initialValue),\n      _useState2 = _slicedToArray(_useState, 2),\n      windowSize = _useState2[0],\n      setWindowSize = _useState2[1];\n\n  function fetchWindowDimensionsAndSave() {\n    setWindowSize({\n      innerWidth: window.innerWidth,\n      innerHeight: window.innerHeight,\n      outerWidth: window.outerWidth,\n      outerHeight: window.outerHeight\n    });\n  } // run on mount\n\n\n  useEffect(function () {\n    // run only once\n    fetchWindowDimensionsAndSave();\n  }, []); // set resize handler once on mount and clean before unmount\n\n  useEffect(function () {\n    window.addEventListener(\"resize\", fetchWindowDimensionsAndSave);\n    return function () {\n      window.removeEventListener(\"resize\", fetchWindowDimensionsAndSave);\n    };\n  }, []);\n  return windowSize;\n}\n\nexport default useWindowSize;","map":null,"metadata":{},"sourceType":"module"}